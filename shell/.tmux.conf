# ----------------------------------------------------------------------------
# TMUX Plugin Manager (TPM) Setup
# ----------------------------------------------------------------------------

# Check if TPM is installed, if not, download it
if-shell '[ ! -d "$HOME/.tmux/plugins/tpm" ]' \
  "run-shell 'git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm'"

# Specify the TPM plugins directory
set -g @tpm_plugins_dir ~/.tmux/plugins

# Set default terminal and shell
set -g default-terminal "screen-256color"
set-option -g default-shell $SHELL
set-option -g default-command "$SHELL -i"

# ----------------------------------------------------------------------------
# Display Settings
# ----------------------------------------------------------------------------

# Terminal settings
set -g mouse on # Enable mouse mode (tmux 2.1 and above)

# Mode Style for Choose-Tree Selection Bar
set -g mode-style bg=colour238,fg=colour180 # Background for selected item (dark greyish background) and text color (soft yellow)

# Optional: Pane colors for a more consistent look in other modes
set -g pane-active-border-style fg=colour66 # Active pane border color (matches the choose-tree border)
set -g pane-border-style fg=colour235       # Inactive pane border color (darker grey)
set -g pane-border-lines heavy              # Makes the border more visible

# Window and Pane indexing
set -g base-index 1       # Start window numbering at 1
setw -g pane-base-index 1 # Start pane numbering at 1

# Title and renaming options
set -g set-titles on # Set terminal title
set -g set-titles-string '#S: #I - #W'
set -g renumber-windows on  # Renumber windows when one closes
setw -g automatic-rename on # Rename windows based on active program

# Status line settings
set -g status on           # Enable status line
set -g status-position top # Position of the status line
set -g status-interval 5   # Update interval for status line
set -g status-justify left # Left-align windows in status line

# Activity monitoring
set -g monitor-activity on
set -g visual-activity on

# ----------------------------------------------------------------------------
# OneDark Theme Settings
# ----------------------------------------------------------------------------

set -g @plugin 'odedlaz/tmux-onedark-theme' # Load OneDark theme
set -g @onedark_theme 'true'                # Enable the OneDark theme

# Date and time formats with color
set -g @onedark_time_format "#[fg=brightyellow]%I:%M %p" # 12-hour time in yellow
set -g @onedark_date_format "#[fg=brightgreen]%d/%m/%Y"  # Date format in green

# Custom widgets (e.g., CPU, Memory, Disk Size, etc.)
set -g @onedark_widgets "#[fg=brightred] #(whoami) " # Display username

# ----------------------------------------------------------------------------
# Navigation and Key Bindings
# ----------------------------------------------------------------------------

# Fix Alt+Delete to delete entire word
bind -n M-Delete send-keys M-Backspace

# Word navigation using Alt+Left and Alt+Right
bind -n M-Left send-keys M-b
bind -n M-Right send-keys M-f

# Session and window management
bind C-c new-window -c "#{pane_current_path}" # New window in current path
bind S command-prompt -p "Session name:" \
  "new-session -s '%%' -c '#{pane_current_path}'"      # Create session with prompt
bind l lock-session                                    # Lock session
bind-key r command-prompt -I "#W" "rename-window '%%'" # Rename current window

# Display session list with detailed windows
bind s choose-tree -w -F '#{?pane_format,#[fg=colour36]#{pane_current_command} #[fg=colour109]#{pane_title:0:15}...,#{?window_format,#[fg=colour113]#{window_name}#{window_flags} #[fg=colour3](#{window_panes} panes), #[fg=colour3]#{(#{session_windows} windows)}#[fg=colour146]#{?session_grouped,(group #{session_group}: #{session_group_list}),}#[fg=colour167] (#{t:session_created})#{?session_attached,#[fg=colour146] (attached),#[fg=colour146] (unattached)}}}'

# Pane management (toggle zoom and swap panes)
bind m resize-pane -Z # Toggle pane zoom

# Split windows in the current directory
bind - split-window -v -c "#{pane_current_path}" # Vertical split
bind | split-window -h -c "#{pane_current_path}" # Horizontal split

# Forward prefix (Ctrl-b) to the SSH session within the tmux pane
bind-key C-b send-prefix

# Toggle Status Bar
bind-key M-s set-option status

# ----------------------------------------------------------------------------
# Plugins
# ----------------------------------------------------------------------------

# Core Plugins
set -g @plugin 'tmux-plugins/tpm'                   # Tmux Plugin Manager (TPM)
set -g @plugin 'tmux-plugins/tmux-sensible'         # Sensible tmux defaults
set -g @plugin 'tmux-plugins/tmux-resurrect'        # Save and restore sessions
set -g @plugin 'tmux-plugins/tmux-continuum'        # Automatic session backup
set -g @plugin 'tmux-plugins/tmux-yank'             # Copy text to system clipboard
set -g @plugin 'tmux-plugins/tmux-prefix-highlight' # Highlight prefix key usage
set -g @plugin 'tmux-plugins/tmux-pain-control'     # Enhanced pane management
set -g @plugin 'tmux-plugins/tmux-copycat'          # Enhanced search capabilities
set -g @plugin 'christoomey/vim-tmux-navigator'     # Vim-like pane navigation

# Continuum and Resurrect configuration
set -g @continuum-restore 'on'      # Restore last session on startup
set -g @continuum-save-interval '5' # Backup interval (in minutes)

# Yank configuration (only if not SSH)
# Copy text to system clipboard (only if not SSH)
if-shell '[ -z "$SSH_CLIENT" ]' \
  "set -g @plugin 'tmux-plugins/tmux-yank'" \
  "set -g @yank_selection 'clipboard'"

# ----------------------------------------------------------------------------
# Additional Configuration
# ----------------------------------------------------------------------------

# Load local config if it exists
if-shell '[ -f ~/.tmux_local.conf ]' "source-file ~/.tmux_local.conf"

# ----------------------------------------------------------------------------
# Initialize TPM Plugins (Keep at the bottom)
# ----------------------------------------------------------------------------

# Check if plugins are installed, if not, install them
if-shell '[ ! -f "$HOME/.tmux/plugins/.plugins_installed" ]' \
  "run-shell '$HOME/.tmux/plugins/tpm/bin/install_plugins && touch $HOME/.tmux/plugins/.plugins_installed'"

# Load TPM
run '~/.tmux/plugins/tpm/tpm'
