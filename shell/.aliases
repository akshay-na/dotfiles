# ---------------------------------------------------------------
# Custom Aliases and Functions
# ---------------------------------------------------------------
# Purpose:
# This `.aliases` file provides a range of command aliases and functions
# to streamline frequently used commands. It covers general shortcuts,
# `kubectl` commands for Kubernetes, `git` commands for version control,
# `npm` for Node.js package management, and Windows terminal shortcuts.

# Usage:
# Place this file as `.aliases` in the home directory and source it in `.bashrc` or `.zshrc`.
# For additional custom aliases, add them in `.alias_local.sh` as suggested, to avoid modifying this core file.
# ---------------------------------------------------------------

# General Aliases
alias c='clear'
alias ls='ls --color -alh'
alias stowall="cd ~/dotfiles && stow *"
alias unstow="stow -D"
alias stowls="stow --no -v"
alias vsc="code  "                                                                          # Open VSCode in current directory
alias kill-tmux="rm -rf ~/.local/share/tmux/resurrect ~/.tmux/resurrect; tmux kill-server;" # Kill tmux and remove resurrect files

# Enhanced directory navigation
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ~='cd ~'

# Process management
alias psa='ps aux'
alias psg='ps aux | grep'
alias psmem='ps aux | sort -nr -k 4 | head -10'
alias pscpu='ps aux | sort -nr -k 3 | head -10'

# ------------------------------------------------------------------------------
# Aliases for Convenient Usage (Optional)
# ------------------------------------------------------------------------------
# If you want to replace or augment existing commands with the new tools:
if command -v bat &>/dev/null; then
  alias cat="bat --paging=never"
fi

# Check if 'eza' exists before aliasing 'ls'
if command -v eza &>/dev/null; then
  alias ls="eza -lhagH --color=auto --group-directories-first --icons --sort=filename"
fi

# Check if 'rg' (ripgrep) exists before aliasing 'grep'
if command -v rg &>/dev/null; then
  alias grep="rg --color=auto --hidden --smart-case"
fi

# Check if 'fd' exists before aliasing 'find'
if command -v fd &>/dev/null; then
  alias find="fd --hidden --exclude .git --exclude node_modules --exclude .pnpm-store --exclude .yarn --exclude yarn-cache --exclude .yarnrc --exclude .pnp.cjs --exclude .pnp.js --exclude .pnp.loader.mjs --exclude .next --exclude out --exclude dist --exclude build"
fi

# ---------------------------------------------------------------
# Kubectl Aliases
# ---------------------------------------------------------------
alias k=kubectl
alias kca='kubectl --all-namespaces' # Use across all namespaces
alias kaf='kubectl apply -f'         # Apply resources
alias keti='kubectl exec -t -i'      # Execute in pod
alias kcuc='kubectl config use-context'
alias kgs='kubectl get svc'
alias kgp='kubectl get pods'
alias kl='kubectl logs'
alias kpf="kubectl port-forward"
alias kgi='kubectl get ingress'
alias kgcm='kubectl get configmaps'
alias kgsec='kubectl get secret'
alias kgd='kubectl get deployment'
alias kgss='kubectl get statefulset'
alias kgno='kubectl get nodes'
alias kgpvc='kubectl get pvc'
alias kgds='kubectl get daemonset'
alias kgcj='kubectl get cronjob'
alias kgj='kubectl get job'
alias kgns='kubectl get namespaces'

# Specialized Kubectl commands with options
alias kgpa='kubectl get pods --all-namespaces'
alias kgpwide='kubectl get pods -o wide'
alias kgswide='kubectl get svc -o wide'
alias kga='kubectl get all'
alias kgaa='kubectl get all --all-namespaces'
alias klf='kubectl logs -f' # Follow logs
alias kl1h='kubectl logs --since 1h'
alias kl1m='kubectl logs --since 1m'
alias klf1h='kubectl logs --since 1h -f'

# ---------------------------------------------------------------
# Git Aliases
# ---------------------------------------------------------------
alias g='git'
alias ga='git add'
alias gaa='git add --all'
alias gco='git checkout'
alias gc='git commit -v'
alias gca='git commit -v --all'
alias gcm='git commit -m'
alias gp='git push'
alias gl='git pull'
alias gst='git status'
alias gcl='git clone --recurse-submodules'
alias gcf='git config --list'
alias grb='git rebase'
alias gpr='git pull --rebase'
alias gpsup='git push --set-upstream origin $(git symbolic-ref --short HEAD)'

# Git Log
alias glgg='git log --graph'
alias glola='git log --graph --pretty="%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset" --all'
alias glo='git log --oneline --decorate'
alias glod='git log --graph --pretty="%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset"'

# Git Worktree Management
alias gwt='git worktree'
alias gwta='git worktree add'
alias gwtls='git worktree list'

# ---------------------------------------------------------------
# npm Aliases
# ---------------------------------------------------------------
alias npmg='npm install -g'
alias npmS='npm install -S'
alias npmD='npm install -D'
alias npmF='npm install -f'
alias npmL='npm list'
alias npmL0='npm ls --depth=0'
alias npmrd='npm run dev'
alias npmt='npm test'
alias npmR='npm run'
alias npmst='npm start'
alias npmU='npm update'
alias npmP='npm publish'

# ---------------------------------------------------------------
# Windows Terminal Aliases (for Windows)
# ---------------------------------------------------------------
# Check if running in Git Bash or WSL
if [[ "$MSYSTEM" == "MINGW64" || "$MSYSTEM" == "MINGW32" || "$(uname -r)" == *"WSL"* ]]; then
  # If running in WSL, convert paths to Windows format
  if grep -qi "WSL" /proc/version; then
    alias new='wt.exe -w 0 -d "$(wslpath -w "$(pwd)")"'
    alias V='wt.exe sp -d "$(wslpath -w "$(pwd)")" -V'
    alias H='wt.exe sp -d "$(wslpath -w "$(pwd)")" -H'
  else
    alias new='wt.exe -w 0 -d "$(pwd)"'
    alias V='wt.exe sp -d "$(pwd)" -V'
    alias H='wt.exe sp -d "$(pwd)" -H'
    alias cmd='start "" "C:\Windows\system32\cmd.exe"'
    alias bash='start "" "C:\Program Files\Git\git-bash.exe"'
  fi

  # Common aliases for both Git Bash and WSL
  alias open='explorer .'
fi

# Load custom local common configurations, if available
[ -f ~/.aliases_local ] && source ~/.aliases_local
