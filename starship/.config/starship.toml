# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = true

format = """\
$username $hostname\
$directory\
$git_branch\
$git_status\
$git_state\
$git_metrics\
$custom\
$all
$os\
$shell\
$character
"""

# right_format = """\
# $battery
# $nodejs
# """

[aws]
disabled      = false                                       # Keep the module active
format        = '[$symbol($profile)(\[$region\])]($style) '
force_display = false                                       # Only show when AWS vars or config are present
symbol        = 'Û∞∏è '

[gcloud]
disabled        = false
format          = '[$symbol($account)(\[$region\])]($style) '
symbol          = 'Ôí¨ '                                                    # Material Design GCP icon (use any you prefer)
style           = 'bold fg:33'                                            # Google Blue
detect_env_vars = ['GOOGLE_CLOUD_PROJECT', 'CLOUDSDK_ACTIVE_CONFIG_NAME']

[azure]
disabled = false
format   = '[$symbol($subscription)]($style) '
symbol   = 'ÓØò '
style    = 'blue bold'

# Replace the 'ÔÑÅ' symbol in the prompt with '‚ûú'
[character] # The name of the module we are configuring is 'character'
format         = '$symbol '
success_symbol = '[ÔÑÅ](bold green)'
error_symbol   = '[ÔÑÅ](bold red)'
disabled       = false

[package]
disabled = true

[cmd_duration]
min_time = 20_00                      # Show command duration over 10,00 milliseconds (=1 sec)
format   = "took [$duration]($style)"

[battery]
full_symbol = "Û±ä£ "

[[battery.display]]
threshold          = 30
style              = "red"
charging_symbol    = "Û±ä§ "
discharging_symbol = "Û±ä° "

[[battery.display]]
threshold          = 50
style              = "#d9f57f"
charging_symbol    = "Û∞¢ù "
discharging_symbol = "Û∞Åæ "

[directory]
truncation_length         = 5
truncate_to_repo          = false
fish_style_pwd_dir_length = 0
use_logical_path          = false
format                    = '[$path]($style) [$read_only]($read_only_style)'
style                     = 'fg:85 bold'
disabled                  = false
read_only                 = 'Û∞çÅ '
read_only_style           = 'red'
truncation_symbol         = '.../'
home_symbol               = '~'

[docker_context]
symbol          = 'Ôåà '
style           = 'blue bold'
format          = 'via [$symbol$context]($style)'
only_with_files = true
disabled        = false
detect_files    = ['docker-compose.yml', 'docker-compose.yaml', 'Dockerfile']

[git_commit]
commit_hash_length = 8
style              = "bold white"

[git_state]
rebase       = 'REBASING'
merge        = 'MERGING'
revert       = 'REVERTING'
cherry_pick  = 'CHERRY-PICKING'
bisect       = 'BISECTING'
am           = 'AM'
am_or_rebase = 'AM/REBASE'
style        = 'bold yellow'
format       = '\([$state( $progress_current/$progress_total)]($style)\)'
disabled     = true

[git_status]
ahead = "‚á°${count} "
behind = "‚á£${count} "
diverged = "‚Üï${ahead_count}/${behind_count} "
untracked = "?${count} "
modified = "!${count} "
conflicted = "ÓØã ${count} "
staged = "‚úì${count} "
stashed = "ÔÉÜ ${count} "
style = "bright-white"
format = """\
[$ahead_behind](bold green)\
[$behind_behind](bold red)\
[$diverged](bold magenta)\
[$stashed](bold blue)\
[$conflicted](bold red)\
[$modified](bold yellow)\
[$untracked](bold cyan)\
[$staged](bold green)\
"""

[kubernetes]
symbol       = '‚ò∏ '
format       = '[$symbol$context( \($namespace\))]($style) in '
style        = 'cyan bold'
disabled     = true
detect_files = ["k8s", "kustomization.yaml", "helmfile.yaml", "Chart.yaml"]

[hostname]
format     = '([$ssh_symbol](#90c0d4)[$hostname]($style)) in '
ssh_only   = false
ssh_symbol = "üåê "
trim_at    = ""
style      = "bold yellow"
disabled   = false

[username]
show_always = true
style_user  = "bold yellow"
format      = "[$user]($style) @"

[shell]
disabled             = false
bash_indicator       = "bash"
powershell_indicator = "powershell"
cmd_indicator        = "cmd"
zsh_indicator        = "zsh"
fish_indicator       = "fish"
unknown_indicator    = "unknown"

[os]
disabled        = false
format          = "$symbol"
symbols.Ubuntu  = "ÓØâ "
symbols.Windows = "ÔÖ∫ "
symbols.Macos   = "ÔÖπ "
symbols.Debian  = "ÓùΩ "
symbols.Unknown = "Ôåß "

[nodejs]
format            = '[$symbol($version)]($style) '
version_format    = 'v${raw}'
symbol            = 'Û∞éô '
style             = "bold fg:#539E43"
disabled          = false
not_capable_style = 'bold red'
detect_extensions = ['js', 'mjs', 'cjs', 'ts', 'tsx', 'jsx']
detect_files      = ['package.json', '.node-version', '.nvmrc']
detect_folders    = ['node_modules']

[python]
disabled = false
symbol = "Ó∞ñ "
format = '[$symbol($version)]($style) '
version_format = "v${raw}"
style = "bold fg:#3572A5"
detect_files = [
  "requirements.txt",
  "Pipfile",
  "pyproject.toml",
  "setup.py",
  "tox.ini",
  ".python-version",
]
detect_extensions = ["py"]
detect_folders = [".venv", "venv", "env", ".tox", "__pycache__"]

[env_var.VIRTUAL_ENV]
symbol = "Ó©∫ "
style  = "bold purple"
format = '[$symbol$env_value]($style)  '

[java]
disabled = false
format = '[$symbol($version)]($style) '
version_format = "v${raw}"
symbol = "Óú∏ "
style = "bold fg:#5382A1"
detect_extensions = ["java"]
detect_files = [
  "pom.xml",
  "build.gradle",
  "build.gradle.kts",
  "settings.gradle",
  "settings.gradle.kts",
]

[rust]
disabled          = false
style             = "bold fg:#DEA584"
format            = '[$symbol($output)]($style) '
symbol            = "Óû® "
detect_files      = ["Cargo.toml"]
detect_extensions = ["rs"]

[golang]
disabled          = false
symbol            = "Û∞üì "
style             = "bold fg:#00ADD8"
format            = '[$symbol($version)]($style) '
version_format    = "v${raw}"
detect_files      = ["go.mod", "go.sum", "main.go"]
detect_extensions = ["go"]

[terraform]
disabled          = false
style             = "bold fg:#844FBA"
format            = '[$symbol($output)]($style) '
symbol            = "Ó¢Ω "
detect_extensions = ["tf", "tfvars"]

[custom.clojure]
command           = "clojure --version | sed -E 's/Clojure CLI version //;s/\\s.*//'"
style             = "bold fg:#5881D8"
format            = '[$symbol($output)]($style) '
symbol            = "Óù® "
detect_extensions = ["clj", "cljs", "cljc"]
